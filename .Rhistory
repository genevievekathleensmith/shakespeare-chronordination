abline(lin.mod)
plot(segmented.mod,add=T)
summary(segmented.mod)
#lines(lowess(x=merged$oxford,y=x3$second),col='blue')
row.names(mydata) = temp$Title[temp$Author=='Shakespeare']
ca_boot_function = function(mydata) {
data.ca <- ca(mydata)
mydata = data[,2:10]
data.ca <- ca(data[,2:10])
# define variables
rown <- nrow(mydata) # number of rows in data table
coln <- ncol(mydata) # number of columns in data table
nsim <- 1000 # number of bootstrapped simulations to run
cut <- 0.90 # set convex hull confidence interval for final plot
lab <- colnames(mydata) # define column (type) labels
# create nsim bootstrapped replicates from original data
data.rowsum <- apply(mydata,1,sum)
# create bootstrapped replicates then reorder by original row order
data.sim <- rmultinom(nsim,data.rowsum[1],prob=mydata[1,])
for (i in 2:rown) {
data.sim <- cbind(data.sim,rmultinom(nsim,data.rowsum[i],prob=mydata[i,]))}
data.sim <- t(data.sim)
data.sim2 <- matrix(rep(0,nsim*rown*coln),nrow=nsim*rown)
for (k in 1:nsim) {
for (i in 1:rown) {
data.sim2[(k-1)*rown+i,] <- data.sim[k+(i-1)*nsim,]}}
# define simulated column coordinates using row transition formula
data.rowsc <- data.ca$rowcoord[,1:2]
data.colsim <- t(t(data.rowsc) %*% data.sim2[1:rown,]) / apply(data.sim2[1:rown,],2,sum)
for (k in 2:nsim) {
data.colsim <- rbind(data.colsim, t(t(data.rowsc) %*% data.sim2[((k-1)*rown+1):(k*rown),]) / apply(data.sim2[((k-1)*rown+1):(k*rown),],2,sum))}
data.colsim2 <- matrix(rep(0,nsim*coln*2),nrow=nsim*coln)
# define simulated row coordinates using column transition formula
data.colsc <- data.ca$colcoord[,1:2]
data.rowsim <- t(t(data.colsc) %*% t(data.sim2[1:rown,])) / apply(data.sim2[1:rown,],1,sum)
for (k in 2:nsim) {
x <- t(t(data.colsc) %*% t(data.sim2[((k-1)*rown+1):(k*rown),]))
data.rowsim <- rbind(data.rowsim, x / apply(data.sim2[((k-1)*rown+1):(k*rown),],1,sum))}
data.rowsim2 <- matrix(rep(0,nsim*rown*2),nrow=nsim*rown)
# populate row and column simulated point matrices with projected coordinates
for (j in 1:coln) {
for (k in 1:nsim) {
data.colsim2[(j-1)*nsim+k,] <- data.colsim[j+(k-1)*coln,]}}
for (j in 1:rown) {
for (k in 1:nsim) {
data.rowsim2[(j-1)*nsim+k,] <- data.rowsim[j+(k-1)*rown,]}}
# set up matrices for recording convex hull sizes
x2 <- matrix(0,nrow(mydata),1)
x3 <- matrix(0,nrow(mydata),1)
x2_a <- matrix(0,nrow(x2),1)
x3_a <- matrix(0,nrow(x3),1)
row.names(x2) <- row.names(mydata)
row.names(x3) <- row.names(mydata)
row.names(x2_a) <- row.names(x2)
row.names(x3_a) <- row.names(x3)
# Define convex hulls around row points and record hull sizes
poly.row <- list()
for (j in 1:nrow(mydata)) {
points <- data.rowsim2[(nsim*(j-1)+1):(nsim*j),]
hpts <- chull(points)
hpts <- c(hpts,hpts[1])
v <- points[hpts,]
poly.row[[j]] <- v
v <- rbind(unique(v),v[1,])
v2 <- as.matrix(dist(v))
x <- matrix(0,nrow(v2)-1,1)
for (i in 1:nrow(x)) {
x[i,1] <- v2[i+1,i]}
x2[j,1] <- sum(x)
x3[j,1] <- max(v2)}
# Define convex hulls around column points
poly.col <- list()
for (j in 1:coln) {
points <- data.colsim2[(nsim*(j-1)+1):(nsim*j),]
hpts <- chull(points)
hpts <- c(hpts,hpts[1])
poly.col[[j]] <- points[hpts,]}
return(list(data.ca,data.rowsc,data.colsc,poly.row))
}
out = ca_boot_function(data[,2:10])
names(out)
class(out)
out[1]
out[2]
out[3][[1]]
out[4]
# plot all bootstrapped data
plot(out[2][[1]],xlim=c(-1.5,3))
arrows(0,0,out[3][[1]][,1],out[3][[1]][,2])
text(out[3][[1]],labels=1:9)
ylimit = .75
xlimit = .55
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
?polygon
#points(ca_results$rowcoord[,1],ca_results$rowcoord[,2],col='green')
# plot original CA rows and columns
par(mfrow=c(1,2))
plot(data.ca)
points()
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
,col=alpha(temp$Author,.3)
abline(h=0,lty=3)
abline(v=0,lty=3)
palette(c('black','red','cyan','purple','orange','black','black','green','blue','black','black'))
plot(data.rowsc[,1],data.rowsc[,2],type='p',xlab='CA1',ylab='CA2',main='All Simulated Data',xlim=c(-.7,.7),ylim=c(-.6,.6))
data.col <- t(t(data.rowsc) %*% mydata) / apply(mydata,2,sum) # set column label positions
data.row <- t(t(data.colsc) %*% t(mydata)) / apply(mydata,1,sum) # set column label positions
# use last two digits of color code to set transparency
for (i in 1:length(poly.row)) {
polygon(poly.row[[i]],col=alpha('blue',.05),border=alpha('blue',.4))}
text(data.row[,1],data.row[,2],temp$Title[temp$Author=='Shakespeare'],font=2,cex=.3,col='black',adj=c(0.5,2.5))
# NOW LET US COMPARE THE ANALYSES : IF WE HAD TO GUESS AT THE DATES FOR EACH PLAY, USING ONLY INTERNAL EVIDENCE, WHAT WOULD OUR CHRONOLOGY LOOK LIKE?
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
out
ca_results
names(ca_results)
ca_results$rownames
ca_results$colnames
ca_results$rowcoord
plot(ca_results$rowcoord)
names(ca_results)
points(ca_results$rowcoord%*%ca_results$rowmass)
points(ca_results$rowcoord%*%ca_results$rowsup)
points(ca_results$rowcoord%*%ca_results$colmass)
ca_results$rowcoord
ca_results$colmass
points(ca_results$rowcoord*ca_results$colmass)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord*ca_results$colmass)
*%*
?*%*
?%*%
names(ca_results)
ca_results$sv
?ca
points(ca_results$rowcoord%*%ca_results$sv)
points(ca_results$rowcoord%*%ca_results$sv)
points(ca_results$rowcoord%*%ca_results$sv,pch=19)
points(ca_results$sv%*%ca_results$rowcoord,pch=19)
points(ca_results$nd%*%ca_results$rowcoord,pch=19)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord%*%ca_results$sv,pch=19)
ca_results$rowcoord%*%ca_results$sv
names(ca_results)
plot.ca(ca_results)
plot(ca_results)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(ca_results$rowcoord)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(ca_results)
print(ca_results)
plot(ca_results$rowcoord)
plot(ca_results)
names(ca_results)
points(ca_results$rowcoord%*%rowinertia,pch=19)
points(ca_results$rowcoord%*%ca_resultsrowinertia,pch=19)
points(ca_results$rowcoord%*%ca_results$rowinertia,pch=19)
points(ca_results$rowcoord%*%ca_results$colinertian,pch=19)
points(ca_results$rowcoord%*%ca_results$colinertia,pch=19)
ca_results$rowcoord%*%ca_results$rowinertia
ca_results$rowinertia%*%ca_results$rowcoord
points(ca_results$rowinertia%*%ca_results$rowcoord)
plot(ca_results$rowcoord)
points(ca_results$rowinertia%*%ca_results$rowcoord)
points(ca_results$rowinertia%*%ca_results$rowcoord,col='red')
plot(ca_results$rowinertia%*%ca_results$rowcoord,col='red')
rowinertia
ca_results$rowinertia
ca_results$rowcoord
points(ca_results$rowcoord[,c(1,2)]%*%ca_results$rowinertia,pch=19)
ca_results$rowcoord[,c(1,2)]
ca_results$rowinertia
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
ca_results$rowcoord[,1]%*%ca_results$rowinertia
ca_results$rowcoord%*%ca_results$rowinertia
plot(ca_results$rowinertia%*%ca_results$rowcoord[,1],col='red')
ca_results$rowinertia%*%ca_results$rowcoord[,1]
ca_results$rowinertia
ca_results$rowcoord[,1]
plot(ca_results$rowinertia*ca_results$rowcoord[,1],col='red')
plot(ca_results$rowinertia*ca_results$rowcoord[,1],ca_results$rowinertia*ca_results$rowcoord[,2],col='red')
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
plot(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
?polygon
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord)
ca_results$rowcoord %*% data[,2:10]/apply(data[,2:10],2,sum)
ca_results$rowcoord[,c(1,2)] %*% data[,2:10]/apply(data[,2:10],2,sum)
ca_results$rowcoord[,c(1,2)]
data[,2:10]/apply(data[,2:10],2,sum)
t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10]/apply(data[,2:10],2,sum)
t(t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10])/apply(data[,2:10],2,sum
)# NOW LET US COMPARE THE ANALYSES : IF WE HAD TO GUESS AT THE DATES FOR EACH PLAY, USING ONLY INTERNAL EVIDENCE, WHAT WOULD OUR CHRONOLOGY LOOK LIKE?
t(t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10])/apply(data[,2:10],2,sum)
out
names(out)
out[1]
out[2]
t(t(out[2]) %*% data[,2:10])/apply(data[,2:10],2,sum)
t(out[2])
out[2]
out[2][[1]]
t(out[2][[1]])
for (i in 1:length(poly.row)) {
polygon(poly.row[[i]],col=alpha('blue',.05),border=alpha('blue',.4))}
t(t(out[2][[1]]) %*% data[,2:10])/apply(data[,2:10],2,sum)
t(out[2][[1]]) %*% data[,2:10])
t(t(out[2][[1]]) %*% data[,2:10])
t(out[2][[1]]) %*% data[,2:10]
data[,2:10]
t(out[2][[1]])
apply(data[,2:10],2,sum)
out[2][[1]]
points(out[2][[1]])
plot(out[2][[1]])
points(ca_results$rowcoord)
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
x = c(3,2,4,0)
y=c(4,1,3,1)
mod = lm(y~x)
mod
1/8
plot(x,y)
plot(x,y,xlim=c(0,4),ylim=c(0,4))
abline(mod)
a = mat(c(4,3,6,9),byrow=T,nrow=2,ncol=2)
a = matrix(c(4,3,6,9),byrow=T,nrow=2,ncol=2)
a
b = matrix(c(-2,9,-5,2),byrow=T,nrow=2,ncol=2)
a-b
x = matrix(c(2,7,4,1),byrow=T,nrow=4)
x
.5*x
x*.5
t(x)
x
u = matrix(c(1,3,-1),nrow=3)
u
v = matrix(c(2,2,4),nrow=3)
v
t(u)
t(u)*v
t(u)%*%v
diag(3)
a
a*diag(2)
diag(2)*a
diag(2)%*%a
a%*%diag(2)
a
b
a%*%b
b%*%a
a%*%b%*%aa
a%*%b%*%a
b%*%a%*%b
(a%*%b)%*%a
a%*%(b%*%a)
x
x = c(3,1,0,1)
x = c(3,1,0,4)
y=c(2,2,1,3)
plot(x,y)
plot(x,y)
mod = lm(y~x)
abline(mod)
plot(x,y,xlim=c(0,4),ylim=c(0,4))
abline(mod)
setwd("~/Documents/shakespeare-chronordination")
data = read.csv('cca_predictions.csv')
data
plot(data$CA_prediction[order(data$CA_prediction)],ylim=c(1615,1585),las=1,ylab='Predicted Year from CCA',pch=19,col='lightgrey',cex=1.1)
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
axis(4,las=1)
text(1:41,data$CA_prediction[order(data$CA_prediction)],data$Title[order(data$CA_prediction)],cex=.75,adj=c(.5,-1))
text(1:41,data$CA_prediction[order(data$CA_prediction)],round(data$CA_prediction[order(data$CA_prediction)])-c(rep(1500,25),rep(1600,41-25)),cex=.75,adj=c(.5,1.75))
data = read.csv('cca_predictions.csv')
data
plot(data$lear,data$pericles)
as.numeric(data$pericles)
data$pericles
data = read.csv('cca_predictions.csv')
data
plot(data$lear,data$pericles)
data = read.csv('cca_predictions.csv')
plot(data$lear,data$pericles)
plot(data$pericles[order(data$pericles)],ylim=c(1615,1585),las=1,ylab='Predicted Year from CCA',pch=19,col='lightgrey',cex=1.1)
text(1:41,data$pericles[order(data$pericles)],data$Title[order(data$pericles)],cex=.75,adj=c(.5,-1))
text(1:41,data$pericles[order(data$pericles)],round(data$pericles[order(data$pericles)])-c(rep(1500,25),rep(1600,41-25)),cex=.75,adj=c(.5,1.75))
data = read.csv('cca_prediction_march2014.csv.csv')
dir()
data = read.csv('cca_prediction_march2014.csv')
data
data[,1:2]
data = data[,1:2]
plot(data$cca_prediction[order(data$cca_prediction)],ylim=c(1615,1585),las=1,ylab='Predicted Year from CCA',pch=19,col='lightgrey',cex=1.1)
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
axis(4,las=1)
plot(data$cca_prediction[order(data$cca_prediction)],ylim=c(1615,1585),las=1,ylab='Predicted Year from CCA',pch=19,col='lightgrey',cex=1.1)
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
text(1:41,data$cca_prediction[order(data$cca_prediction)],data$Title[order(data$cca_prediction)],cex=.75,adj=c(.5,-1))
text(1:41,data$cca_prediction[order(data$cca_prediction)],round(data$cca_prediction[order(data$cca_prediction)])-c(rep(1500,25),rep(1600,41-25)),cex=.75,adj=c(.5,1.75))
boot = read.csv('cca_bootstrap_results_march2014.csv')
head(boot)
boot = read.csv('cca_bootstrap_results_march2014.csv',header=F)
head(boot)
names(boot)
names(boot)[1]
names(boot)[1]='abbrv'
names(boot)
dim(boot)
temp = read.csv('temp.csv')
temp = read.table('temp.txt')
dim(temp)
head(temp)
names(temp)
temp$V1
boot = read.table('temp.txt')
View(temp)
rm(temp)
names = read.table('titles.txt')
names
data$abbrv
data$Title
names = read.csv('cca_bootstrap_play_titles.csv')
names
names = read.csv('cca_bootstrap_play_titles.csv',header=)
names = read.csv('cca_bootstrap_play_titles.csv',header=F)
names
names = names[,1]
names
boot = data.frame(names,boot)
boot = read.table('temp.txt')
names = read.csv('cca_bootstrap_play_titles.csv',header=F)
names
names = names[,1]
names
plot(boot)
plot(boot)
boxplot(boot)
plot(boot[1,])
plot(boot[1,1:100])
plot(boot[1,1:100])
boot[1,1:100]
plot(boot[1,1])
plot(boot[1,1:10])
boxplot(boot[1,1:10])
boxplot(as.numeric(boot[1,1:10]))
boxplot(as.numeric(boot[,1:10]))
boxplot(as.numeric(boot[1,]))
apply(boot,1,mean)
plot(apply(boot,1,mean))
plot(sort(apply(boot,1,mean)))
plot(sort(apply(boot,1,mean)),ylim=c(1615,1590))
names
apply(boot,1,quantile(probs=c(.025,.975)))
apply(boot,1,quantile,probs=c(.025,.975))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(1:41,x[1,],1:41,x[2,])
boot_means = sort(apply(boot,1,mean))
plot(boot_means,ylim=c(1615,1590))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(1:41,x[1,][order(boot_means)],1:41,x[2,][order(boot_means)])
segments(c(1:41)[order(boot_means)],x[1,],c(1:41)[order(boot_means)],x[2,])
segments(c(1:41)[order(boot_means)],x[1,][order(boot_means)],c(1:41)[order(boot_means)],x[2,][order(boot_means)])
c(1:41)[order(boot_means)]
order(boot_means)
boot_means
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41)[order(boot_means)],x[1,][order(boot_means)],c(1:41)[order(boot_means)],x[2,][order(boot_means)])
order(boot_means)
(1:41)[order(boot_means)]
segments(c(1:41)[order(boot_means)],x[1,],c(1:41)[order(boot_means)],x[2,][order(boot_means)])
segments(c(1:41)[order(boot_means)],x[1,],c(1:41)[order(boot_means)],x[2,])
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41)[order(boot_means)],x[1,],c(1:41)[order(boot_means)],x[2,])
[order(boot_means)]
order(boot_means)
c(1:41)[order(boot_means)]
x[1,]
segments(c(1:41)[order(boot_means)],x[1,][order(boot_means)],c(1:41)[order(boot_means)],x[2,][order(boot_means)])
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41)[order(boot_means)],x[1,][order(boot_means)],c(1:41)[order(boot_means)],x[2,][order(boot_means)])
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)])
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)])
points(sort(boot_means))
points(sort(boot_means),pch=19,col='lightgrey')
points(sort(boot_means),bg='lightgrey')
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590))
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)])
points(sort(boot_means),bg='lightgrey')
plot(sort(boot_means),ylim=c(1615,1590),type='n')
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)])
points(sort(boot_means),bg='lightgrey')
points(sort(boot_means),pch=21,bg='lightgrey')
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590),type='n')
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)])
points(sort(boot_means),pch=21,bg='lightgrey')
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='CCA prediction',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)])
points(sort(boot_means),pch=21,bg='lightgrey')
plot(data$cca_prediction[order(data$cca_prediction)],ylim=c(1615,1585),las=1,ylab='Predicted Year from CCA',pch=19,col='lightgrey',cex=1.1)
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
#axis(4,las=1)
text(1:41,data$cca_prediction[order(data$cca_prediction)],data$Title[order(data$cca_prediction)],cex=.75,adj=c(.5,-1))
text(1:41,data$cca_prediction[order(data$cca_prediction)],round(data$cca_prediction[order(data$cca_prediction)])-c(rep(1500,25),rep(1600,41-25)),cex=.75,adj=c(.5,1.75))
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='grey')
points(sort(boot_means),pch=19,col='grey')
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='grey')
points(sort(boot_means),pch=19,col='grey')
points(sort(boot_means),pch=19,col='darkgrey')
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='darkgrey')
points(sort(boot_means),pch=19,col='darkgrey')
text(1:41,sort(boot_means),names)
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='darkgrey')
points(sort(boot_means),pch=19,col='darkgrey')
text(1:41,sort(boot_means),names,cex=.75,adj=c(1,1))
text(1:41,sort(boot_means)-1,names,cex=.75)
text(1:41,sort(boot_means)+2,names,cex=.75)
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='darkgrey')
points(sort(boot_means),pch=19,col='darkgrey')
text(1:41,sort(boot_means)+2,names,cex=.75)
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='darkgrey')
points(sort(boot_means),pch=19,col='darkgrey')
text(1:41,sort(boot_means)+2,names,cex=.5)
boot_means = apply(boot,1,mean)
plot(sort(boot_means),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
x = apply(boot,1,quantile,probs=c(.025,.975))
abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
dim(x)
segments(c(1:41),x[1,][order(boot_means)],c(1:41),x[2,][order(boot_means)],col='darkgrey')
points(sort(boot_means),pch=19,col='darkgrey')
text(1:41,sort(boot_means)+2,names[order(boot_means)],cex=.5)
x
t(x)
data.frame(t(x[order(boot_means)])
alksdjf)
x[order(boot_means)]
x[,order(boot_means)]
t(x[,order(boot_means)]
)
names
data.frame(names,t(x))
boot_means
data.frame(names,boot_means,t(x))
output = data.frame(names,boot_means,t(x))
names(output)
names(output) = c('play','mean_cca','lower_95','upper_95')
head(output)
write.csv(output,'CCA_bootstrap_confidence_intervals.csv',row.names=F)
