text(out[3][[1]],labels=1:9)
ylimit = .75
xlimit = .55
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
?polygon
#points(ca_results$rowcoord[,1],ca_results$rowcoord[,2],col='green')
# plot original CA rows and columns
par(mfrow=c(1,2))
plot(data.ca)
points()
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
,col=alpha(temp$Author,.3)
abline(h=0,lty=3)
abline(v=0,lty=3)
palette(c('black','red','cyan','purple','orange','black','black','green','blue','black','black'))
plot(data.rowsc[,1],data.rowsc[,2],type='p',xlab='CA1',ylab='CA2',main='All Simulated Data',xlim=c(-.7,.7),ylim=c(-.6,.6))
data.col <- t(t(data.rowsc) %*% mydata) / apply(mydata,2,sum) # set column label positions
data.row <- t(t(data.colsc) %*% t(mydata)) / apply(mydata,1,sum) # set column label positions
# use last two digits of color code to set transparency
for (i in 1:length(poly.row)) {
polygon(poly.row[[i]],col=alpha('blue',.05),border=alpha('blue',.4))}
text(data.row[,1],data.row[,2],temp$Title[temp$Author=='Shakespeare'],font=2,cex=.3,col='black',adj=c(0.5,2.5))
# NOW LET US COMPARE THE ANALYSES : IF WE HAD TO GUESS AT THE DATES FOR EACH PLAY, USING ONLY INTERNAL EVIDENCE, WHAT WOULD OUR CHRONOLOGY LOOK LIKE?
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
out
ca_results
names(ca_results)
ca_results$rownames
ca_results$colnames
ca_results$rowcoord
plot(ca_results$rowcoord)
names(ca_results)
points(ca_results$rowcoord%*%ca_results$rowmass)
points(ca_results$rowcoord%*%ca_results$rowsup)
points(ca_results$rowcoord%*%ca_results$colmass)
ca_results$rowcoord
ca_results$colmass
points(ca_results$rowcoord*ca_results$colmass)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord*ca_results$colmass)
*%*
?*%*
?%*%
names(ca_results)
ca_results$sv
?ca
points(ca_results$rowcoord%*%ca_results$sv)
points(ca_results$rowcoord%*%ca_results$sv)
points(ca_results$rowcoord%*%ca_results$sv,pch=19)
points(ca_results$sv%*%ca_results$rowcoord,pch=19)
points(ca_results$nd%*%ca_results$rowcoord,pch=19)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord%*%ca_results$sv,pch=19)
ca_results$rowcoord%*%ca_results$sv
names(ca_results)
plot.ca(ca_results)
plot(ca_results)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(ca_results$rowcoord)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(ca_results)
print(ca_results)
plot(ca_results$rowcoord)
plot(ca_results)
names(ca_results)
points(ca_results$rowcoord%*%rowinertia,pch=19)
points(ca_results$rowcoord%*%ca_resultsrowinertia,pch=19)
points(ca_results$rowcoord%*%ca_results$rowinertia,pch=19)
points(ca_results$rowcoord%*%ca_results$colinertian,pch=19)
points(ca_results$rowcoord%*%ca_results$colinertia,pch=19)
ca_results$rowcoord%*%ca_results$rowinertia
ca_results$rowinertia%*%ca_results$rowcoord
points(ca_results$rowinertia%*%ca_results$rowcoord)
plot(ca_results$rowcoord)
points(ca_results$rowinertia%*%ca_results$rowcoord)
points(ca_results$rowinertia%*%ca_results$rowcoord,col='red')
plot(ca_results$rowinertia%*%ca_results$rowcoord,col='red')
rowinertia
ca_results$rowinertia
ca_results$rowcoord
points(ca_results$rowcoord[,c(1,2)]%*%ca_results$rowinertia,pch=19)
ca_results$rowcoord[,c(1,2)]
ca_results$rowinertia
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
ca_results$rowcoord[,1]%*%ca_results$rowinertia
ca_results$rowcoord%*%ca_results$rowinertia
plot(ca_results$rowinertia%*%ca_results$rowcoord[,1],col='red')
ca_results$rowinertia%*%ca_results$rowcoord[,1]
ca_results$rowinertia
ca_results$rowcoord[,1]
plot(ca_results$rowinertia*ca_results$rowcoord[,1],col='red')
plot(ca_results$rowinertia*ca_results$rowcoord[,1],ca_results$rowinertia*ca_results$rowcoord[,2],col='red')
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
plot(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
?polygon
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord)
ca_results$rowcoord %*% data[,2:10]/apply(data[,2:10],2,sum)
ca_results$rowcoord[,c(1,2)] %*% data[,2:10]/apply(data[,2:10],2,sum)
ca_results$rowcoord[,c(1,2)]
data[,2:10]/apply(data[,2:10],2,sum)
t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10]/apply(data[,2:10],2,sum)
t(t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10])/apply(data[,2:10],2,sum
)# NOW LET US COMPARE THE ANALYSES : IF WE HAD TO GUESS AT THE DATES FOR EACH PLAY, USING ONLY INTERNAL EVIDENCE, WHAT WOULD OUR CHRONOLOGY LOOK LIKE?
t(t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10])/apply(data[,2:10],2,sum)
out
names(out)
out[1]
out[2]
t(t(out[2]) %*% data[,2:10])/apply(data[,2:10],2,sum)
t(out[2])
out[2]
out[2][[1]]
t(out[2][[1]])
for (i in 1:length(poly.row)) {
polygon(poly.row[[i]],col=alpha('blue',.05),border=alpha('blue',.4))}
t(t(out[2][[1]]) %*% data[,2:10])/apply(data[,2:10],2,sum)
t(out[2][[1]]) %*% data[,2:10])
t(t(out[2][[1]]) %*% data[,2:10])
t(out[2][[1]]) %*% data[,2:10]
data[,2:10]
t(out[2][[1]])
apply(data[,2:10],2,sum)
out[2][[1]]
points(out[2][[1]])
plot(out[2][[1]])
points(ca_results$rowcoord)
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
x = c(3,2,4,0)
y=c(4,1,3,1)
mod = lm(y~x)
mod
1/8
plot(x,y)
plot(x,y,xlim=c(0,4),ylim=c(0,4))
abline(mod)
a = mat(c(4,3,6,9),byrow=T,nrow=2,ncol=2)
a = matrix(c(4,3,6,9),byrow=T,nrow=2,ncol=2)
a
b = matrix(c(-2,9,-5,2),byrow=T,nrow=2,ncol=2)
a-b
x = matrix(c(2,7,4,1),byrow=T,nrow=4)
x
.5*x
x*.5
t(x)
x
u = matrix(c(1,3,-1),nrow=3)
u
v = matrix(c(2,2,4),nrow=3)
v
t(u)
t(u)*v
t(u)%*%v
diag(3)
a
a*diag(2)
diag(2)*a
diag(2)%*%a
a%*%diag(2)
a
b
a%*%b
b%*%a
a%*%b%*%aa
a%*%b%*%a
b%*%a%*%b
(a%*%b)%*%a
a%*%(b%*%a)
x
x = c(3,1,0,1)
x = c(3,1,0,4)
y=c(2,2,1,3)
plot(x,y)
plot(x,y)
mod = lm(y~x)
abline(mod)
plot(x,y,xlim=c(0,4),ylim=c(0,4))
abline(mod)
x = c(89,72,94,69)
x^2
x2 = x^2
x2[2] - mean(x2)
(x2[2] - mean(x2))/range(x2)
range(x2)
(x2[2] - mean(x2))/(range(x2)[2]-range(x2)[1])
(x2[4] - mean(x2))/(range(x2)[2]-range(x2)[1])
#install.packages("network")
library(network)
library(scales)
edges = read.csv("~/Documents/eager/carrara.csv",header=T)
net = network(edges)
plot(net,mode="circle")
plot(net, displaylabels=T)
plot(net,mode="circle")
edges
edges = read.csv("~/Documents/eager/bi_directional.csv",header=T)
edges
edges = read.csv("~/Documents/eager/carrara.csv",header=F)
net = network(edges)
plot(net,mode="circle")
plot(net, displaylabels=T)
network.edgecount(net)
network.density(net)
network.size(net)
xcoords = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
ycoords = c(rep(seq(6,1,-1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', label.col = env, vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
ycoords = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
xcoords = c(rep(seq(6,1,-1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
xcoords
ycoords
xcoords = c(rep(seq(6,1,1),6))
ycoords = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
xcoords = c(rep(seq(6,1,1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
#label.col = env,
ycoords = rev(c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6)))
xcoords = c(rep(seq(6,1,1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
#label.col = env,
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
xcoords = c(rep(seq(6,1,-1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
xcoords = c(rep(seq(1,6,1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
summary(net)
list.network.attributes(net)
list.vertex.attributes(net)
list.edge.attributes(net)
neighbors = numeric()
for (i in 1:36) {
neighbors = c(neighbors, length(get.neighborhood(net,i,type='combined'))) }
#plot(neighbors)
plot(table(neighbors),lwd=10,lend=2,col='lightgrey',frame.plot=F,las=1,xlab='Number of neighbours',ylab='Frequency',xlim=c(.75,4.75),ylim=c(0,20))
(1/2)/(1/2)
(1/2)*(1/2)
(1/2)/(2/3)
devtools::install_github("karthik/wesanderson")
install.packages('devtools')
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install_github("karthik/wesanderson")
ls -l /Library/Frameworks/R.framework/Versions/
install_github("karthik/wesanderson")
library(devtools)
install_github("karthik/wesanderson")
library(wesanderson)
wesanderson
?wesanderson
plot(rnorm(10),rnorm(10))
plot(rnorm(10),rnorm(10),pch=19,cex=2)
x = rnomr(50)
x = rnorm(50)
y = x+rnorm(50)
plot(x,y,pch=19,cex=2)
plot(x,y,pch=19,cex=2,col=wes.palette(3,'GrandBudapest'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'GrandBudapest'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'GrandBudapest'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'SteveZissou'))
namelist()
data(namelist)
namelist
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Zissou'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'Zissou'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'Rushmore'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'FantasticFox'))
plot(x,y,pch=19,cex=2,col=wes.palette(3,'FantasticFox'))
plot(x,y,pch=19,cex=2,col=wes.palette(3,'Royal1'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Royal1'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Royal2'))
plot(x,y,pch=19,cex=2,col=wes.palette(3,'Royal2'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Royal2'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Chevalier'))
1462-885
setwd("~/Documents/shakespeare-chronordination")
dates = read.csv('dates.csv')
head(dates)
write.csv(dates[,2:5],'dates.csv',rownames=F)
write.csv(dates[,2:5],'dates.csv',row.names=F)
dates = read.csv('dates.csv')
head(dates)
levels(dates$abbrv)
cca = read.csv('cca_bootstrap_confidence_intervals_march2014.csv')
head(cca)
merged = merge(cca,dates)
merged = merge(cca,dates,by.x=Title,by.y=abbrv)
merged = merge(cca,dates,by.x=cca$Title,by.y=dates$abbrv)
names(cca)
names(dates)
merged = merge(data,dates,by.x=data$Title,by.y=dates$abbrv)
dates = read.csv('dates.csv')
head(dates)
levels(dates$abbrv)
data = read.csv('cca_bootstrap_confidence_intervals_march2014.csv')
head(cca)
merged = merge(data,dates,by.x=data$Title,by.y=dates$abbrv)
names(cca)
names(dates)
View(merged)
head(dates)
dates = read.csv('dates.csv')
head(dates)
dates = dates[,c(1,2,4)]
head(dates)
data = read.csv('cca_bootstrap_confidence_intervals_march2014.csv')
head(data)
merged = merge(data,dates,by.x=data$Title,by.y=dates$abbrv)
names(data)
names(data)[1]='abbrv'
merged = merge(data,dates,by.x=data$abbrv,by.y=dates$abbrv)
merge(data,dates,by.x=data$abbrv,by.y=dates$abbrv)
intersect(names(data),names(dates))
merged = merge(data,dates)
head(merged)
tar = read.csv('Tarlinskaja_PCA_date_predictions.csv')
head(tar)
dates = read.csv('dates.csv')
head(dates)
data = read.csv('cca_bootstrap_confidence_intervals_march2014.csv')
head(data)
merged$abbrv
tar = read.csv('Tarlinskaja_PCA_date_predictions.csv')
head(tar)
x = merge(tar,merged)
x
x = merge(tar,merged,all=L)
x = merge(tar,merged,all=T)
x
tar = read.csv('Tarlinskaja_PCA_date_predictions.csv')
x = merge(tar,merged,all=T)
View(x)
merged
head(tar)
tar = read.csv('Tarlinskaja_PCA_date_predictions.csv')
x = merge(tar,merged,all=T)
dates = read.csv('dates.csv')
head(dates)
dates = dates[,c(1,2,4)]
data = read.csv('cca_bootstrap_confidence_intervals_march2014.csv')
head(data)
names(data)[1]='abbrv'
merged = merge(data,dates)
merged$abbrv
tar = read.csv('Tarlinskaja_PCA_date_predictions.csv')
head(tar)
x = merge(tar,merged,all=T)
View(x)
x = merge(tar,merged)
View(x)
names(x)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1590))
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585))
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n')
segments(rep(1,41),x$riverside,rep(2,41),x$oxford)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$Tarlinskaja_date)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(1,41),x$cca_prediction,rep(2,41),x$mean_cca)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
segments(rep(1,41),x$mean_cca,rep(2,41),x$Tarlinskaja_date)
segments(rep(3,41),x$mean_cca,rep(4,41),x$Tarlinskaja_date)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
segments(rep(3,41),x$mean_cca,rep(4,41),x$Tarlinskaja_date)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n',axes=F)
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
segments(rep(3,41),x$mean_cca,rep(4,41),x$Tarlinskaja_date)
axis(1,labels=c('river','ox','cca','boot','tar'))
axis(1,at =0:4),labels=c('river','ox','cca','boot','tar'))
axis(1,at =0:4,labels=c('river','ox','cca','boot','tar'))
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n',axes=F,xlab='',ylab='')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
segments(rep(3,41),x$mean_cca,rep(4,41),x$Tarlinskaja_date)
axis(1,at =0:4,labels=c('river','ox','cca','boot','tar'))
axis(2,las=1)
plot(rep(1,41),x$riverside,xlim=c(0,5),ylim=c(1615,1585),type='n',axes=F,xlab='',ylab='')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
segments(rep(3,41),x$mean_cca,rep(4,41),x$Tarlinskaja_date)
axis(1,at =0:4,labels=c('river','ox','cca','boot','tar'))
axis(2,las=1)
x
text(rep(4.5,41),x$Tarlinskaja_date,labels=x$Title)
plot(rep(1,41),x$riverside,xlim=c(0,5),ylim=c(1615,1585),type='n',axes=F,xlab='',ylab='')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
segments(rep(3,41),x$mean_cca,rep(4,41),x$Tarlinskaja_date)
axis(1,at =0:4,labels=c('river','ox','cca','boot','tar'))
axis(2,las=1)
text(rep(4.5,41),x$Tarlinskaja_date,labels=x$Title,cex=.4)
plot(rep(1,41),x$riverside,xlim=c(0,4),ylim=c(1615,1585),type='n',axes=F,xlab='',ylab='')
segments(rep(0,41),x$oxford,rep(1,41),x$riverside)
segments(rep(1,41),x$riverside,rep(2,41),x$cca_prediction)
segments(rep(2,41),x$cca_prediction,rep(3,41),x$mean_cca)
axis(1,at =0:3,labels=c('river','ox','cca','boot'))
axis(2,las=1)
text(rep(3.5,41),x$mean_cca,labels=x$Title,cex=.4)
setwd("~/Documents/shakespeare-chronordination")
library(scales)
#data = read.csv('cca_prediction_march2014.csv')
data = read.csv('cca_prediction_march2014_tempest.csv')
#boot = read.table('boots.txt')
boot = read.table('boots_tempest.txt')
names = read.csv('cca_bootstrap_play_titles.csv',header=F)
#names = read.table('raw_data_titles.txt')
names = names[,1]
boot_means = apply(boot,1,mean)
x = apply(boot,1,quantile,probs=c(.025,.975))
status = read.csv('playhouse_status_august_2013.csv')
open = status$date[status$status=='open']
close = status$date[status$status=='closed']
output = data.frame(names,boot_means,t(x))
names(output) = c('play','mean_cca','lower_95','upper_95')
combined = merge(data[,1:2],output,by.x='Title',by.y='play')
levels(combined$Title)[which(levels(combined$Title)=='ALL')] = 'AWW'
levels(combined$Title)[which(levels(combined$Title)=='KJ')] = 'JN'
levels(combined$Title)[which(levels(combined$Title)=='LEA')] = 'LR'
levels(combined$Title)[which(levels(combined$Title)=='RJ')] = 'ROM'
levels(combined$Title)[which(levels(combined$Title)=='TEM')] = 'TMP'
levels(combined$Title)[which(levels(combined$Title)=='TC')] = 'TRO'
levels(combined$Title)[which(levels(combined$Title)=='MW')] = 'WIV'
levels(combined$Title)[which(levels(combined$Title)=='WIN')] = 'WT'
plot(sort(combined$mean_cca),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
points(1:41,combined$cca_prediction[order(combined$cca_prediction)])
anchors = which(combined$Title[order(combined$cca_prediction)]=='3H6'|combined$Title[order(combined$cca_prediction)]=='JC'|combined$Title[order(combined$cca_prediction)]=='PER')
points(c(1:41)[anchors],combined$cca_prediction[order(combined$cca_prediction)][anchors],col='black',pch=19)
for (i in 1:length(close)) {
polygon(c(0,0,41,41),c(close[i],open[i+1],open[i+1],close[i]),col=alpha('black',.1),border=NA)
}
text(1:41,sort(combined$cca_prediction)+.5,combined$Title[order(combined$cca_prediction)],cex=.5)
text(1:41,combined$cca_prediction[order(combined$cca_prediction)]+1,round(combined$cca_prediction[order(combined$cca_prediction)])-c(rep(1500,25),rep(1600,41-25)),cex=.5,adj=c(.5,1.75))
combined
plot(sort(combined$cca_prediction),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
points(1:41,combined$cca_prediction[order(combined$cca_prediction)])
anchors = which(combined$Title[order(combined$cca_prediction)]=='3H6'|combined$Title[order(combined$cca_prediction)]=='JC'|combined$Title[order(combined$cca_prediction)]=='PER')
points(c(1:41)[anchors],combined$cca_prediction[order(combined$cca_prediction)][anchors],col='black',pch=19)
for (i in 1:length(close)) {
polygon(c(0,0,41,41),c(close[i],open[i+1],open[i+1],close[i]),col=alpha('black',.1),border=NA)
}
text(1:41,sort(combined$cca_prediction)+.5,combined$Title[order(combined$cca_prediction)],cex=.5)
text(1:41,combined$cca_prediction[order(combined$cca_prediction)]+1,round(combined$cca_prediction[order(combined$cca_prediction)])-c(rep(1500,25),rep(1600,41-25)),cex=.5,adj=c(.5,1.75))
plot(sort(combined$mean_cca),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
#abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
segments(c(1:41),combined$lower_95[order(combined$mean_cca)],c(1:41),combined$upper_95[order(combined$mean_cca)],col='darkgrey')
points(sort(combined$mean_cca),pch=19,col='darkgrey')
text(1:41,sort(combined$mean_cca)+2,combined$Title[order(combined$mean_cca)],cex=.5)
anchors = which(combined$Title[order(combined$mean_cca)]=='3H6'|combined$Title[order(combined$mean_cca)]=='JC'|combined$Title[order(combined$mean_cca)]=='PER')
points(c(1:41)[anchors],combined$cca_prediction[order(combined$cca_prediction)][anchors],col='black',pch=19)
for (i in 1:length(close)) {
polygon(c(0,0,41,41),c(close[i],open[i+1],open[i+1],close[i]),col=alpha('black',.1),border=NA)
}
plot(sort(combined$mean_cca),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
#abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
segments(c(1:41),combined$lower_95[order(combined$mean_cca)],c(1:41),combined$upper_95[order(combined$mean_cca)],col='darkgrey')
points(sort(combined$mean_cca),pch=19,col='darkgrey')
text(1:41,sort(combined$mean_cca)+2,combined$Title[order(combined$mean_cca)],cex=.5)
points(1:41,combined$cca_prediction[order(combined$mean_cca)])
anchors = which(combined$Title[order(combined$mean_cca)]=='3H6'|combined$Title[order(combined$mean_cca)]=='JC'|combined$Title[order(combined$mean_cca)]=='PER')
points(c(1:41)[anchors],combined$cca_prediction[order(combined$cca_prediction)][anchors],col='black',pch=19)
for (i in 1:length(close)) {
polygon(c(0,0,41,41),c(close[i],open[i+1],open[i+1],close[i]),col=alpha('black',.1),border=NA)
}
plot(sort(combined$mean_cca),ylim=c(1615,1590),type='n',ylab='Predicted Year from CCA',las=1)
#abline(h=c(1590,1600,1610),lty=3,col='lightgrey',lwd=2)
segments(c(1:41),combined$lower_95[order(combined$cca_prediction)],c(1:41),combined$upper_95[order(combined$cca_prediction)],col='darkgrey')
points(combined$mean_cca[order(combined$cca_prediction)],pch=19,col='darkgrey')
text(1:41,sort(combined$cca_prediction)+2,combined$Title[order(combined$mean_cca)],cex=.5)
points(1:41,sort(combined$cca_prediction))
anchors = which(combined$Title[order(combined$cca_prediction)]=='3H6'|combined$Title[order(combined$cca_prediction)]=='JC'|combined$Title[order(combined$cca_prediction)]=='PER')
points(c(1:41)[anchors],combined$cca_prediction[order(combined$cca_prediction)][anchors],col='black',pch=19)
for (i in 1:length(close)) {
polygon(c(0,0,41,41),c(close[i],open[i+1],open[i+1],close[i]),col=alpha('black',.1),border=NA)
}
