polygon(poly.row[[i]],col=alpha('blue',.05),border=alpha('blue',.4))}
text(data.row[,1],data.row[,2],temp$Title[temp$Author=='Shakespeare'],font=2,cex=.3,col='black',adj=c(0.5,2.5))
# NOW LET US COMPARE THE ANALYSES : IF WE HAD TO GUESS AT THE DATES FOR EACH PLAY, USING ONLY INTERNAL EVIDENCE, WHAT WOULD OUR CHRONOLOGY LOOK LIKE?
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
out
ca_results
names(ca_results)
ca_results$rownames
ca_results$colnames
ca_results$rowcoord
plot(ca_results$rowcoord)
names(ca_results)
points(ca_results$rowcoord%*%ca_results$rowmass)
points(ca_results$rowcoord%*%ca_results$rowsup)
points(ca_results$rowcoord%*%ca_results$colmass)
ca_results$rowcoord
ca_results$colmass
points(ca_results$rowcoord*ca_results$colmass)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord*ca_results$colmass)
*%*
?*%*
?%*%
names(ca_results)
ca_results$sv
?ca
points(ca_results$rowcoord%*%ca_results$sv)
points(ca_results$rowcoord%*%ca_results$sv)
points(ca_results$rowcoord%*%ca_results$sv,pch=19)
points(ca_results$sv%*%ca_results$rowcoord,pch=19)
points(ca_results$nd%*%ca_results$rowcoord,pch=19)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord%*%ca_results$sv,pch=19)
ca_results$rowcoord%*%ca_results$sv
names(ca_results)
plot.ca(ca_results)
plot(ca_results)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(ca_results$rowcoord)
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
plot(ca_results)
print(ca_results)
plot(ca_results$rowcoord)
plot(ca_results)
names(ca_results)
points(ca_results$rowcoord%*%rowinertia,pch=19)
points(ca_results$rowcoord%*%ca_resultsrowinertia,pch=19)
points(ca_results$rowcoord%*%ca_results$rowinertia,pch=19)
points(ca_results$rowcoord%*%ca_results$colinertian,pch=19)
points(ca_results$rowcoord%*%ca_results$colinertia,pch=19)
ca_results$rowcoord%*%ca_results$rowinertia
ca_results$rowinertia%*%ca_results$rowcoord
points(ca_results$rowinertia%*%ca_results$rowcoord)
plot(ca_results$rowcoord)
points(ca_results$rowinertia%*%ca_results$rowcoord)
points(ca_results$rowinertia%*%ca_results$rowcoord,col='red')
plot(ca_results$rowinertia%*%ca_results$rowcoord,col='red')
rowinertia
ca_results$rowinertia
ca_results$rowcoord
points(ca_results$rowcoord[,c(1,2)]%*%ca_results$rowinertia,pch=19)
ca_results$rowcoord[,c(1,2)]
ca_results$rowinertia
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
ca_results$rowcoord[,1]%*%ca_results$rowinertia
ca_results$rowcoord%*%ca_results$rowinertia
plot(ca_results$rowinertia%*%ca_results$rowcoord[,1],col='red')
ca_results$rowinertia%*%ca_results$rowcoord[,1]
ca_results$rowinertia
ca_results$rowcoord[,1]
plot(ca_results$rowinertia*ca_results$rowcoord[,1],col='red')
plot(ca_results$rowinertia*ca_results$rowcoord[,1],ca_results$rowinertia*ca_results$rowcoord[,2],col='red')
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
points(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
plot(ca_results$rowcoord[,1]%*%ca_results$rowinertia,pch=19)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
?polygon
plot(x=0,y=0,type='n',xlim=c(-xlimit,xlimit),ylim=c(-ylimit,ylimit),asp=1)
for (i in 1:41) {polygon(out[4][[1]][[i]],col=alpha('green',.4))}
points(ca_results$rowcoord)
ca_results$rowcoord %*% data[,2:10]/apply(data[,2:10],2,sum)
ca_results$rowcoord[,c(1,2)] %*% data[,2:10]/apply(data[,2:10],2,sum)
ca_results$rowcoord[,c(1,2)]
data[,2:10]/apply(data[,2:10],2,sum)
t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10]/apply(data[,2:10],2,sum)
t(t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10])/apply(data[,2:10],2,sum
)# NOW LET US COMPARE THE ANALYSES : IF WE HAD TO GUESS AT THE DATES FOR EACH PLAY, USING ONLY INTERNAL EVIDENCE, WHAT WOULD OUR CHRONOLOGY LOOK LIKE?
t(t(ca_results$rowcoord[,c(1,2)]) %*% data[,2:10])/apply(data[,2:10],2,sum)
out
names(out)
out[1]
out[2]
t(t(out[2]) %*% data[,2:10])/apply(data[,2:10],2,sum)
t(out[2])
out[2]
out[2][[1]]
t(out[2][[1]])
for (i in 1:length(poly.row)) {
polygon(poly.row[[i]],col=alpha('blue',.05),border=alpha('blue',.4))}
t(t(out[2][[1]]) %*% data[,2:10])/apply(data[,2:10],2,sum)
t(out[2][[1]]) %*% data[,2:10])
t(t(out[2][[1]]) %*% data[,2:10])
t(out[2][[1]]) %*% data[,2:10]
data[,2:10]
t(out[2][[1]])
apply(data[,2:10],2,sum)
out[2][[1]]
points(out[2][[1]])
plot(out[2][[1]])
points(ca_results$rowcoord)
plot(data.ca$rowcoord[,1],data.ca$rowcoord[,2],pch=19)
x = c(3,2,4,0)
y=c(4,1,3,1)
mod = lm(y~x)
mod
1/8
plot(x,y)
plot(x,y,xlim=c(0,4),ylim=c(0,4))
abline(mod)
a = mat(c(4,3,6,9),byrow=T,nrow=2,ncol=2)
a = matrix(c(4,3,6,9),byrow=T,nrow=2,ncol=2)
a
b = matrix(c(-2,9,-5,2),byrow=T,nrow=2,ncol=2)
a-b
x = matrix(c(2,7,4,1),byrow=T,nrow=4)
x
.5*x
x*.5
t(x)
x
u = matrix(c(1,3,-1),nrow=3)
u
v = matrix(c(2,2,4),nrow=3)
v
t(u)
t(u)*v
t(u)%*%v
diag(3)
a
a*diag(2)
diag(2)*a
diag(2)%*%a
a%*%diag(2)
a
b
a%*%b
b%*%a
a%*%b%*%aa
a%*%b%*%a
b%*%a%*%b
(a%*%b)%*%a
a%*%(b%*%a)
x
x = c(3,1,0,1)
x = c(3,1,0,4)
y=c(2,2,1,3)
plot(x,y)
plot(x,y)
mod = lm(y~x)
abline(mod)
plot(x,y,xlim=c(0,4),ylim=c(0,4))
abline(mod)
x = c(89,72,94,69)
x^2
x2 = x^2
x2[2] - mean(x2)
(x2[2] - mean(x2))/range(x2)
range(x2)
(x2[2] - mean(x2))/(range(x2)[2]-range(x2)[1])
(x2[4] - mean(x2))/(range(x2)[2]-range(x2)[1])
#install.packages("network")
library(network)
library(scales)
edges = read.csv("~/Documents/eager/carrara.csv",header=T)
net = network(edges)
plot(net,mode="circle")
plot(net, displaylabels=T)
plot(net,mode="circle")
edges
edges = read.csv("~/Documents/eager/bi_directional.csv",header=T)
edges
edges = read.csv("~/Documents/eager/carrara.csv",header=F)
net = network(edges)
plot(net,mode="circle")
plot(net, displaylabels=T)
network.edgecount(net)
network.density(net)
network.size(net)
xcoords = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
ycoords = c(rep(seq(6,1,-1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', label.col = env, vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
ycoords = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
xcoords = c(rep(seq(6,1,-1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
xcoords
ycoords
xcoords = c(rep(seq(6,1,1),6))
ycoords = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
xcoords = c(rep(seq(6,1,1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
#label.col = env,
ycoords = rev(c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6)))
xcoords = c(rep(seq(6,1,1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
#label.col = env,
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
xcoords = c(rep(seq(6,1,-1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
xcoords = c(rep(seq(1,6,1),6))
coords = cbind(xcoords,ycoords)
par(mfrow=c(1,2))
plot(net, coord = coords, jitter = F, displaylabels = T, vertex.col = 'lightblue', vertex.cex = 6, label.cex = .5, label.pos = 5, xlab='36 verticies\n70 edges')
summary(net)
list.network.attributes(net)
list.vertex.attributes(net)
list.edge.attributes(net)
neighbors = numeric()
for (i in 1:36) {
neighbors = c(neighbors, length(get.neighborhood(net,i,type='combined'))) }
#plot(neighbors)
plot(table(neighbors),lwd=10,lend=2,col='lightgrey',frame.plot=F,las=1,xlab='Number of neighbours',ylab='Frequency',xlim=c(.75,4.75),ylim=c(0,20))
(1/2)/(1/2)
(1/2)*(1/2)
(1/2)/(2/3)
devtools::install_github("karthik/wesanderson")
install.packages('devtools')
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install_github("karthik/wesanderson")
ls -l /Library/Frameworks/R.framework/Versions/
install_github("karthik/wesanderson")
library(devtools)
install_github("karthik/wesanderson")
library(wesanderson)
wesanderson
?wesanderson
plot(rnorm(10),rnorm(10))
plot(rnorm(10),rnorm(10),pch=19,cex=2)
x = rnomr(50)
x = rnorm(50)
y = x+rnorm(50)
plot(x,y,pch=19,cex=2)
plot(x,y,pch=19,cex=2,col=wes.palette(3,'GrandBudapest'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'GrandBudapest'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'GrandBudapest'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'SteveZissou'))
namelist()
data(namelist)
namelist
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Zissou'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'Zissou'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'Rushmore'))
plot(x,y,pch=19,cex=2,col=wes.palette(5,'FantasticFox'))
plot(x,y,pch=19,cex=2,col=wes.palette(3,'FantasticFox'))
plot(x,y,pch=19,cex=2,col=wes.palette(3,'Royal1'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Royal1'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Royal2'))
plot(x,y,pch=19,cex=2,col=wes.palette(3,'Royal2'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Royal2'))
plot(x,y,pch=19,cex=2,col=wes.palette(4,'Chevalier'))
1462-885
setwd("~/Documents/shakespeare-chronordination/heatmap/sh_heat")
data = read.csv('sh_data.csv')
head(data)
data = read.csv('sh_data_names.csv')
head(data)
data = read.csv('../..//fulldata.csv')
head(data)
data = read.csv('../..//SH DATA all counts A minus C Ed Bruster 11-5 Smith 11-15.csv')
head(data)
counts = data[,c(2:10)]
props = prop.table(counts,1)
props = prop.table(as.matrix(counts),1)
head(props)
sum(props[1,])
sum(props[,1])
mean(props[,1])
mean(props[,2])
mean(props[,3])
mean(props[,4])
dates = read.csv('../..//alldates.csv')
head(dataes)
head(dates)
levels(data$abbrv)
levles(dates$abbrv)
levels(dates$abbrv)
merged = merge(data,dates,by.x='abbrv',by.y='abbrv')
head(merged)
sort(merged)
?sort
merged[order(merged$oxford),]
merged_props = prop.table(as.matrix(merged[,3:11]),1)
head(merged_props)
sum(merged_props[1,])
sum(merged_props[,1])
merged_props = data.frame(merged$abbrv,merged$Title,merged$oxford,merged_props)
head(merged_props)
names(merged_props)
names(merged_props)[1:3]
names(merged_props)[1:3]=c('abbrv','Title','oxford')
head(merged_props)
reshape(merged_props,varying=c(4:12),vnames=names(merged_props)[4:12],timevar=Title)
reshape(merged_props,varying=c(4:12),timevar=Title)
reshape(merged_props,varying=c(4:12),timevar=Title,direction = Long)
reshape(merged_props,varying=c(4:12),timevar=Title,direction = 'long')
reshape(merged_props,varying=c(4:12),timevar=Title,direction = 'long',times=1:41)
proportion = c(merged_props[,4],merged_props[,5],merged_props[,6],merged_props[,7],merged_props[,8],merged_props[,9],merged_props[,10],merged_props[,11],merged_props[,12])
proportion
length(proportion)/41
require(stats)
formula(PlantGrowth)         # check the default formula
pg <- unstack(PlantGrowth)   # unstack according to this formula
head(pg)
head(PlantGrowth)
stack(pg)
stack(merged_props)
head(merged_props)
stack(merged_props[,c(1,4:12)])
stacked_props = stack(merged_props[,c(1,4:12)])
dim(stacked_props)
369/9
abbrv = ()
for (i in 1:41){
}
rep(merged$Title,9)
heat_data = data.frame(rep(merged_props$Title,9),stacked_props)
head(heat_data)
names(heat_data)
names(heat_data)=c()
names(heat_data)
names(heat_data)=c('Title','Proportion','Pause')
head(heat_data)
as.numeric(heat_data$Pause)
levels(heat_data$Pause)
head(merged)
merged = merged[order(merged$oxford),]
head(merged)
proportion = c(merged_props[,4],merged_props[,5],merged_props[,6],merged_props[,7],merged_props[,8],merged_props[,9],merged_props[,10],merged_props[,11],merged_props[,12])
names(merged_props)
merged_props = data.frame(merged$abbrv,merged$Title,merged$oxford,merged_props)
head(merged_props)
names(merged_props)[1:3]=c('abbrv','Title','oxford')
head(merged_props)
stacked_props = stack(merged_props[,c(1,4:12)])
dim(stacked_props)
head(stacked_props)
stack(merged_props[,c(1,4:12)])
head(merged_props)
stacked_props = stack(merged_props[,c(1,7:15)])
head(stacked_props)
dim(stacked_props)
heat_data = data.frame(rep(merged_props$Title,9),stacked_props)
head(heat_data)
names(heat_data)=c('Title','Proportion','Pause')
head(heat_data)
simple_data = heat_data
levels(simple_data$Pause)
levels(simple_data$Pause)=c(8,5,1,4,9,2,7,6,3)
head(simple_data)
levels(simple_data$Title)
levels(data$abbrv)
levels(simple_data$Title)=levels(data$abbrv)
head(simple_data)
dir()
write.csv('heat_data.csv',row.names=F)
write.csv(heat_data,'heat_data.csv',row.names=F)
write.csv(simple_data,'simple_data.csv',row.names=F)
as.numeric(levels(data$abbrv))
as.numeric(data$abbrv)
as.numeric(head(simple_data$Title))
head(heat_data)
head_simple
head(simple_data)
simple_data = heat_data
levels(simple_data$Pause)=c(8,5,1,4,9,2,7,6,3)
write.csv(simple_data,'simple_data.csv',row.names=F)
head(simple_data)
simple_data$Title
simple_data$Title = rep(seq(1,41,1),9)
head(simple_data)
write.csv(simple_data,'simple_data.csv',row.names=F)
names(simple_data)
names(simple_data)=c('play','prop','pause')
names(heat_data)=c('play','prop','pause')
write.csv('heat_data.csv',row.names=F)
write.csv(simple_data,'simple_data.csv',row.names=F)
merged_props[8,]
merged_props[30,]
merged_props[31,]
heatmap(counts)
heatmap(props)
heatmap(props,Rowv=NA,Colv=NA)
heatmap(props,Rowv=NA)
heatmap(props,Rowv=NA,Colv=NA,col=grey(10))
heatmap(props,Rowv=NA,Colv=NA,col=grey(0,1))
heatmap(props,Rowv=NA,Colv=NA,col=grey(0))
heatmap(props,Rowv=NA,Colv=NA,col=grey(1))
heatmap(props,Rowv=NA,Colv=NA,col=grey(.4))
palette()
heatmap(props,Rowv=NA,Colv=NA)
heatmap(props,Rowv=NA,Colv=NA,col=cm.colors(256))
heatmap(props,Rowv=NA,Colv=NA,col=grey.colors(256))
heatmap(props,Rowv=NA,Colv=NA,col=grey.colors(25))
heatmap(props,Rowv=NA,Colv=NA,col=grey.colors(5))
heatmap(props,Rowv=NA,Colv=NA,col=rev(grey.colors(15)))
par(mar=c(5,5,5,5))
heatmap(props,Rowv=NA,Colv=NA,col=rev(grey.colors(15)))
library(gplots)
heatmap.2(as.matrix(props[order(data$year),]),Rowv=F,Colv=F,trace='none',key=F,keysize=.5,labRow=paste(data$year[order(data$year)],data$Title[order(data$year)],sep=', '), lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
install.packages('gplots')
library(gplots)
heatmap.2(as.matrix(props[order(data$year),]),Rowv=F,Colv=F,trace='none',key=F,keysize=.5,labRow=paste(data$year[order(data$year)],data$Title[order(data$year)],sep=', '), lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(props,Rowv=NA,Colv=NA,col=rev(grey.colors(15)))
heatmap.2(props,Rowv=F,Colv=F,col=rev(grey.colors(15)))
heatmap.2(props,Rowv=F,Colv=F,trace='none',key=F,keysize=.5,labRow=paste(data$year[order(data$year)],data$Title[order(data$year)],sep=', '), lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
props
?heatmap.2
heatmap.2(as.matrix(props[order(data$year),]),Rowv=F,Colv=F,trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(props,Rowv=F,Colv=F,trace='none',key=F,keysize=.5,labRow=paste(data$year[order(data$year)],data$Title[order(data$year)],sep=', '), lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(props,Rowv=F,Colv=F,trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(props,Rowv=F,Colv=F,trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(props,Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
props
View(merged_props)
head(merged_props)
heatmap.2(merged_props[,c(7:15)],Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(as.matrix(merged_props[,c(7:15)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
props
View(merged_props)
data = read.csv('../..//SH DATA all counts A minus C Ed Bruster 11-5 Smith 11-15.csv')
head(data)
counts = data[,c(2:10)]
props = prop.table(as.matrix(counts),1)
props
data = read.csv('../..//SH DATA all counts A minus C Ed Bruster 11-5 Smith 11-15.csv')
View(merged)
head(merged)
merged = merged[order(merged$oxford),]
head(merged)
data = read.csv('../..//SH DATA all counts A minus C Ed Bruster 11-5 Smith 11-15.csv')
head(data)
dates = read.csv('../..//alldates.csv')
head(dates)
levels(data$abbrv)
levles(dates$abbrv)
merged = merge(data,dates,by.x='abbrv',by.y='abbrv')
merged = merged[order(merged$oxford),]
head(merged)
merged_props = prop.table(as.matrix(merged[,3:11]),1)
head(merged_props)
head(merged)
merged_props = data.frame(merged[,c(1,2,14)],merged_props)
head(merged_props)
heatmap.2(as.matrix(merged_props[,4:(4+8)]))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100))))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
data = read.csv('../..//SH DATA all counts A minus C Ed Bruster 11-5 Smith 11-15.csv')
head(data)
dates = read.csv('../..//alldates.csv')
head(dates)
levels(data$abbrv)
levles(dates$abbrv)
merged = merge(data,dates,by.x='abbrv',by.y='abbrv')
merged = merged[order(merged$oxford),]
head(merged)
merged_props = prop.table(as.matrix(merged[,3:11]),1)
head(merged_props)
merged_props = data.frame(merged[,c(1,2,14)],merged_props)
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep=', '))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep='/t'))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep='\t'))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep='\t\t\t'))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep='     '))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep=' '))
heatmap.2(as.matrix(merged_props[,4:(4+8)]),Rowv=F,Colv=F,dendrogram='none',trace='none',key=F,keysize=.5,lmat=rbind(c(0,3,4),c(2,1,0)), lwid = c(.5,1,1),labCol=NA,col=grey(c(100:1/100)),labRow=paste(merged_props$Title,merged_props$oxford,sep=', '))
stack(merged_props[,c(1,4:12)])
View(merged_props)
head(merged_props)
stacked_props = stack(merged_props[,c(1,4:12)])
head(stacked_props)
heat_data = data.frame(stacked_props,rep(merged_props$Title,9))
head(heat_data)
names(heat_data)
names(heat_data) = c('prop','pause','play')
simple_data = heat_data
levels(simple_data$pause)=c(8,5,1,4,9,2,7,6,3)
levels(heat_data$pause)
head(simple_data)
simple_data$play = c(rep(seq(1,41,1),9))
head(simple_data)
write.csv(simple_data,'simple_data.csv',row.names=F)
write.csv(heat_data,'heat_data.csv',row.names=F)
